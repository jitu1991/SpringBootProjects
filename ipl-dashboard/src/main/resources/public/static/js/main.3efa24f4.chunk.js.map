{"version":3,"sources":["logo.svg","components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3efa24f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n      <div>\r\n      <span className=\"vs\">vs</span>\r\n      <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n      <h2 className=\"match-date\">{match.date}</h2>\r\n      <h3 className=\"match-venue\">at {match.venue}</h3>\r\n      <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n      <h3>First Innings</h3>\r\n      <p>{match.team1}</p>\r\n      <h3>Second Innings</h3>\r\n      <p>{match.team2}</p>\r\n      <h3>Man of the match</h3>\r\n      <p>{match.playerOfMatch}</p>\r\n      <h3>Umpires</h3>\r\n      <p>{match.umpire1}, {match.umpire2}</p>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({match, teamName}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <span className=\"vs\">vs</span>\r\n      <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link} from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport './TeamPage.scss';\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\n\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({matches: []});\r\n  const {teamName} = useParams();\r\n  useEffect(\r\n    () => {\r\n      const fetchTeam = async () => {\r\n        const response = await fetch(`/team/${teamName}`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      }; \r\n      fetchTeam();\r\n    }, [teamName]\r\n  );\r\n\r\n    if(!team || !team.teamName) {\r\n      return <h1>Team not found</h1>\r\n    }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1></div>\r\n      <div className=\"win-loss-section\">\r\n        Wins/Losses\r\n      <PieChart data={[\r\n        {title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d'},\r\n        {title: 'Wins', value: team.totalWins, color: '#4da375'}\r\n      ]}/>\r\n      </div>\r\n      <div className = \"match-detail-section\">\r\n      <h3>Latest Match</h3>\r\n      <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n      </div>\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    let years =[];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n    \r\n    for(let i= startYear; i<= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n        {years.map(year => \r\n        <li key={year} >\r\n            <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link></li>)}\r\n        </ol>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams} from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const {teamName, year} = useParams();\r\n    useEffect(\r\n        () => {\r\n          const fetchMatches = async () => {\r\n            const response = await fetch(`/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            setMatches(data);\r\n          }; \r\n          fetchMatches();\r\n        }, [teamName, year]\r\n      );\r\n\r\n\r\n return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n        <YearSelector teamName={teamName}/>\r\n      </div>\r\n      <div>\r\n      <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n      {matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\r\n      </div>\r\n          </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                    </Link></h1>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  useEffect(\r\n    () => {\r\n      const fetchAllTeams = async () => {\r\n        const response = await fetch(`/teams`);\r\n        const data = await response.json();\r\n        setTeams(data);\r\n      }; \r\n      fetchAllTeams();\r\n    }, []\r\n  );\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n        <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\r\n        </div>\r\n    <div className=\"team-grid\">\r\n        {teams.map(team => <TeamTile key={team.id}  teamName={team.teamName} />)}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path=\"/teams/:teamName/matches/:year\">\n        <MatchPage/>\n        </Route>\n        <Route path=\"/teams/:teamName\">\n        <TeamPage/>\n        </Route>\n        <Route path=\"/\">\n        <HomePage/>\n        </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}